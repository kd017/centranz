CREATE DATABASE IF NOT EXISTS CENTRANZ;

USE  CENTRANZ;


CREATE TABLE IF NOT EXISTS `AGE_BAND` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS `RACE` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS `GENDER` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);
  
CREATE TABLE IF NOT EXISTS `YEAR` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);
  
CREATE TABLE IF NOT EXISTS `EDUCATION` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);
  
CREATE TABLE IF NOT EXISTS `RESIDENCE` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS `WORK_EXPERIENCE` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS `DISABILITY_STATUS` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);

CREATE TABLE IF NOT EXISTS `FAMILY_STATUS` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);
  
CREATE TABLE IF NOT EXISTS `NATIVITY` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);
  
CREATE TABLE IF NOT EXISTS `REGION` (
    `ID` INT NOT NULL,
    `CODE` VARCHAR(64) NULL,
    `DESCRIPTION` VARCHAR(128) NULL,
    PRIMARY KEY (`ID`)
);
  

CREATE TABLE IF NOT EXISTS `POPULATION` (
    `ID` INT NOT NULL AUTO_INCREMENT,
    `TOTAL` INT NULL,
    `BELOW_POVERTY` INT NULL,
    `AGE_BAND_FK` INT NULL,
    `RACE_FK` INT  NULL,
    `GENDER_FK` INT  NULL,
    `YEAR_FK` INT NULL,
    `EDUCATION_FK` INT NULL,
    `RESIDENCE_FK` INT NULL,
    `DISABILITY_STATUS_FK` INT NULL,
    `FAMILY_STATUS_FK` INT NULL,
    `NATIVITY_FK` INT NULL,
    `REGION_FK` INT NULL,
    `WORK_EXPERIENCE_FK` INT NULL,
    PRIMARY KEY (`ID`),
    INDEX `AGE_BAND_FK_IDX` (`AGE_BAND_FK` ASC),
    CONSTRAINT `AGE_BAND_FK` FOREIGN KEY (`AGE_BAND_FK`) REFERENCES `AGE_BAND` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `RACE_FK_IDX` (`RACE_FK` ASC),
    CONSTRAINT `RACE_FK` FOREIGN KEY (`RACE_FK`) REFERENCES `RACE` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `GENDER_FK_IDX` (`GENDER_FK` ASC),
    CONSTRAINT `GENDER_FK` FOREIGN KEY (`GENDER_FK`) REFERENCES `GENDER` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `YEAR_FK_idx` (`YEAR_FK` ASC),
    CONSTRAINT `YEAR_FK` FOREIGN KEY (`YEAR_FK`) REFERENCES `YEAR` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `EDUCATION_FK_IDX` (`EDUCATION_FK` ASC),
    CONSTRAINT `EDUCATION_FK` FOREIGN KEY (`EDUCATION_FK`) REFERENCES `EDUCATION` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `RESIDENCE_FK_idx` (`RESIDENCE_FK` ASC),
    CONSTRAINT `RESIDENCE_FK` FOREIGN KEY (`RESIDENCE_FK`) REFERENCES `RESIDENCE` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `DISABILITY_STATUS_FK_IDX` (`DISABILITY_STATUS_FK` ASC),
    CONSTRAINT `DISABILITY_STATUS_FK` FOREIGN KEY (`DISABILITY_STATUS_FK`) REFERENCES `DISABILITY_STATUS` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `FAMILY_STATUS_FK_IDX` (`FAMILY_STATUS_FK` ASC),
    CONSTRAINT `FAMILY_STATUS_FK` FOREIGN KEY (`FAMILY_STATUS_FK`) REFERENCES `FAMILY_STATUS` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `NATIVITY_FK_IDX` (`NATIVITY_FK` ASC),
    CONSTRAINT `NATIVITY_FK` FOREIGN KEY (`NATIVITY_FK`) REFERENCES `NATIVITY` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `REGION_FK_IDX` (`REGION_FK` ASC),
    CONSTRAINT `REGION_FK` FOREIGN KEY (`REGION_FK`) REFERENCES `REGION` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
    INDEX `WORK_EXPERIENCE_FK_IDX` (`WORK_EXPERIENCE_FK` ASC),
    CONSTRAINT `WORK_EXPERIENCE_FK` FOREIGN KEY (`WORK_EXPERIENCE_FK`) REFERENCES `WORK_EXPERIENCE` (`ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
);

  
